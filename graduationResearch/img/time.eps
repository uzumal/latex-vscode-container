%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 409 230
%%HiResBoundingBox: 0 0 408.5 229.5
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 11.0.1 (Build 20B50) Quartz PS Context)
%%Title: (\343\203\225\343\202\232\343\203\254\343\202\273\343\202\231\343\203\263\343\203\206\343\203\274\343\202\267\343\203\247\343\203\2631)
%%Creator: (PowerPoint: cgpdftops CUPS filter)
%%CreationDate: (Thursday, February 18 2021 16:14:18 JST)
%%For: (System Administrator)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%PageOrder: Ascend
%RBINumCopies: 1
%%EndComments
% EPSF created by ps2eps 1.68
%%BeginProlog
-220 413 translate
-90 rotate
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
userdict/dscInfo 5 dict dup begin
/Title(\343\203\225\343\202\232\343\203\254\343\202\273\343\202\231\343\203)def
/Creator(PowerPoint: cgpdftops CUPS filter)def
/CreationDate(Thursday, February 18 2021 16:14:18 JST)def
/For(System Administrator)def
/Pages 1 def
end put
%%BeginProlog
%%BeginFile: lw8_errorhandler-2.0
/currentpacking where 
	{ pop /oldpack currentpacking def /setpacking where
		{
			pop false setpacking
		}if
	}if
/$brkpage 64 dict def $brkpage begin
/prnt
 {dup type/stringtype ne{=string cvs}if dup length 6 mul/tx exch def/ty 10 def
  currentpoint/toy exch def/tox exch def 1 setgray newpath
  tox toy 2 sub moveto 0 ty rlineto tx 0 rlineto 0 ty neg rlineto
  closepath fill tox toy moveto 0 setgray show}bind def
/nl{currentpoint exch pop lmargin exch moveto 0 -10 rmoveto}def
/=={/cp 0 def typeprint nl}def
/typeprint{dup type exec}readonly def
/lmargin 72 def
/rmargin 72 def
/tprint
   {dup length cp add rmargin gt{nl/cp 0 def}if
    dup length cp add/cp exch def prnt}readonly def
/cvsprint{=string cvs tprint( )tprint}readonly def
/integertype{cvsprint}readonly def
/realtype{cvsprint}readonly def
/booleantype{cvsprint}readonly def
/operatortype{(--)tprint =string cvs tprint(-- )tprint}readonly def
/marktype{pop(-mark- )tprint}readonly def
/dicttype{pop(-dictionary- )tprint}readonly def
/nulltype{pop(-null- )tprint}readonly def
/filetype{pop(-filestream- )tprint}readonly def
/savetype{pop(-savelevel- )tprint}readonly def
/fonttype{pop(-fontid- )tprint}readonly def
/nametype{dup xcheck not{(/)tprint}if cvsprint}readonly def
/stringtype
 {dup rcheck{(\()tprint tprint(\))tprint}{pop(-string- )tprint}ifelse
 }readonly def
/arraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-array- )tprint}ifelse
 }readonly def
/packedarraytype
 {dup rcheck{dup xcheck
  {({)tprint{typeprint}forall(})tprint}
  {([)tprint{typeprint}forall(])tprint}ifelse}{pop(-packedarray- )tprint}ifelse
 }readonly def
/courier/Courier findfont 10 scalefont def
end %$brkpage
errordict/handleerror
 {systemdict begin $error begin $brkpage begin newerror
   {/newerror false store 
    vmstatus pop pop 0 ne{grestoreall}if initgraphics courier setfont
    lmargin 720 moveto(ERROR: )prnt errorname prnt
    nl(OFFENDING COMMAND: )prnt/command load prnt
 	$error/ostack known{
	$error/ostack get type dup/arraytype eq exch /packedarraytype eq or
   {nl nl(STACK:)prnt nl nl $error/ostack get aload length{==}repeat}if}if
    systemdict/showpage get exec(%%[ Error: )print
    errorname =print(; OffendingCommand: )print/command 
    load =print( ]%%)= flush}if end end end}
dup 0 systemdict put dup 4 $brkpage put bind readonly put
/currentpacking where 
	{ pop  /setpacking where
		{
			pop oldpack setpacking
		}if
	}if
%%EndFile
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 
% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
% languagelevel2 ONLY code goes here
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd
/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd
/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy
	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd
/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if
	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict
	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
% end of language level 2 ONLY code
{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
% Disable CTRL-D as an end-of-file marker...
userdict dup(\004)cvn{}put (\004\004)cvn{}put
[{
%%BeginFeature: *BindEdge Left
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Booklet Left
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNAdvancedSmoothing None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNAuthenticate True
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNBackPaperSrc Cas1
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNBackPrintOn Off
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNBrightness 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNCTonerDensity 9
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorHalftone pattern2
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorMode color
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorSyncICC DefaultFile
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorToUseWithBlack Red
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNColorTonerVolumeAdjustment None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNContrast 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNCopySetNumbering False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNCopyTray None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNCreep False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNDisplacementCorrection Device
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNDuplex DuplexFront
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNEnableTrustPrint False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNFinTray None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNFinisher None
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNFrontPaperSrc Cas1
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNFrontPrintOn Off
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGradation High1
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGradationSmoothing Off
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGraphicsMode VectorMode
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNGrayConversion NTSC
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNHalftone pattern2
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNHyperSharpness Middle
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNImageObjectType Text
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInsertInputSlot Cas1
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInsertPrintSide None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInsertSheet False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInterleafInputSlot Auto
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInterleafMediaType PlainPaper1
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInterleafPrint False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInterleafSelectBy PaperSource
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNInterleafSheet False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNJobExecMode print
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNKeepGray Standard
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNLineControl None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMTonerDensity 9
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMatchingMethod None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNMultiPunch Off
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNNumberOfColors FullColor
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNOutputPartition None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNPlatformVersion 0310
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNPrintJobStartTimeHour 00
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNPrintJobStartTimeMinute 00
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNPuncher None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNRotatePrint False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSaddleFoldSetting pattern1
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSaddleFolding False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSaddleStitch False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSetBackSheet False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSetFrontSheet False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSheetForInsertion Insert
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNShiftStartPrintPosition False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSpecialFineLineProcess True
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSpecialSmooth None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNSrcOption OptCas2
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNStaple False
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTonerDensity 9
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTonerDensityAdjustment None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTonerSaving False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTonerVolumeAdjustment None
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTrustPrint False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNTypeWing True
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNUseCarbonCopy False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNUseJobAccount False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNUseUsrManagement False
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNUsrManagement Off
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNVfolding False
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNXColorAdjustment 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNYColorAdjustment 6
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *CNYTonerDensity 9
<< >>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Collate True
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *InputSlot Auto
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *MediaType Auto
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *OutputBin Auto
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *PageSize A4
<</PageSize[595 842]/ImagingBBox null/MarginMode 0>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *Resolution 600
<</HWResolution[600 600]>>setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *StapleLocation TopLeft
<<>>setpagedevice
%%EndFeature
} stopped cleartomark
userdict/ESPrc/rectclip where{pop/rectclip load}
{{newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath clip newpath}bind}ifelse put
userdict/ESPrf/rectfill where{pop/rectfill load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath fill grestore}bind}ifelse put
userdict/ESPrs/rectstroke where{pop/rectstroke load}
{{gsave newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
neg 0 rlineto closepath stroke grestore}bind}ifelse put
userdict/ESPwl{}bind put
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 595 842
%%BeginPageSetup
595.0 0.0 translate 90 rotate
%%EndPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: CVXBME+Meiryo
%!FontType1-1.0: CVXBME+Meiryo 1.0000.6.3000
14 dict begin
/FontName /CVXBME+Meiryo def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /gid1 put
dup 34 /gid3 put
dup 35 /gid4 put
dup 36 /gid5 put
dup 37 /gid6 put
dup 38 /gid2 put
dup 39 /gid17 put
dup 40 /gid16 put
dup 41 /gid26 put
dup 42 /gid22 put
dup 43 /gid19 put
dup 44 /gid21 put
dup 45 /gid18 put
dup 46 /gid25 put
dup 47 /gid23 put
dup 48 /gid20 put
dup 49 /gid24 put
dup 50 /gid15 put
dup 51 /gid9 put
dup 52 /gid14 put
dup 53 /gid7 put
dup 54 /gid8 put
dup 55 /gid12 put
dup 56 /gid11 put
dup 57 /gid10 put
dup 58 /gid13 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2016 1 index div -901 2 index div 3732 3 index div 2171 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000030A6670676D00000000000003A800000BD8676C79660000000000000F80000018DE6865616400000000000028600000003668686561000000000000289800000024686D747800000000000028BC0000006C6C6F63610000000000002928000000386D6178700000000000002960000000207072657000000000000029800000046C0626000B000005E3001F009A05E3001F000004E3001F0000000000000000046A001F00960000FFE100000000FFE100000000FFE10000FE5FFFF5000000000000FE730000000000000000000005EE00140234FFEC03BA00140000FFEC00000000000000000000000000000000000000000000000000000000FEB0087B0000000000000800000008000000040000000070009F0095007F0000008C007A00660000000000000077008B00000000000000000000000000000000000000000000000000000071000000B7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000C200BA00AD00000000000000B600B000A6009E0000000000BF00B400AA006A000000000000000000A5009F0090000000A6009D0096008F00A10097008A007A0080008500000000000000000000009A000000000000000000000000000000000000000000E3011101A0028300D300CC00000000000000000000000000000000009A0094000000C700B7008C008A008500650074006E00A000AF0000000000A4009D00000000000000000000000000000000010900000000000000810077007A0000000000000000009900000086007A00000084008000760000018E02350075007B00C200000099009000860078042002F600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000410046004B00500055005A005F00640069006E00730078007D00820087008C00910096009B00A000A50000000000000000008C00910096009B00A000A50085009300A000AE00B80073004E0000000005EC00160000059A00180000059A001800000000000000000000000000000400001800000000FFE800000000FFE8FF890000FFE80000FE29FFF5000000970000FEBA0000008A00D600E100970094008A00770080005800C300860071FCAEFFEB000D000040565F5E5D5C5B5A5954524D4C4B4A4948474644434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100


458A60441B2121592D2C4B545820458A60441B2121592D2C4B53234B515A58381B2121592D2C4B5458381B2121592D2CB002435458B0462B1B21212121592D2CB002435458B0472B1B212121592D2CB002435458B0482B1B21212121592D2CB002435458B0492B1B212121592D2C4B52587D1B7A592D2CB1020042B123018851B1400188535A58B910000020885458B202010243604259B12401885158B920000040885458B2020202436042B12401885458B2022002436042004B014B5258B2020802436042591BB940000080885458B202040243604259B94000008063B80100885458B202080243604259B94000010063B80200885458B202100243604259B94000020063B80400885458B202400243604259595959592D2C20B82000628A6023622D2CB0072558001B0159B0042510B00325B0022520B8FFFF545821CD1BED5921B006255CB006255A58B0092B5920B005254AB0042547B004254760B0062547B0806361B00225B0005558B00325B00725496359B0082558001B0159B00425B0062549B009255CB009255A58B0092B59B0072546B0806361B0032520B0005558631B2159612320B0005558B080631B21B08059B0592BB006255C586959B00425202010B00048233AB0062658001B0159B0052658B003252F598A12233221212D2CB00625B00A2587B00625B009254AB0005358B00625B00A251BB00925B0072559B00225B00225070CB005256323B00625636020B94000040063535821B00426B00426B00A1BB94000040063655158B0042665B0042665B00A1BB00426B00426B000B00325B003250B0D0AB0092EB00725B007250B0D0AB00B2EB00525B0052507595920B0005558B00525B0052587B00725B007250BB0092510B00B25B0092620B8FFFF545821CD1BED59B00525B0052507B00825B00B254923B00625B0062587B00A2510B00B25C15920B00051B800522378B00161B00225B00725B0072507B00A25B00D254961B08062B00525B005250BB00A252338B00625B0062587B00825B008250BB00A2510B00B25C4B00625B0062507B00925B00C2549B0032554B8FFA723792121212121212121212121212D2C23B0005458B9400000001BB900004000598AB0005458B9400000001BB90000400059B05B2B2D2C08B0005458B9400000001BB900004000590DB05B2B2D2C8A8A080D8AB0005458B9400000001BB90000400059B05B2B2D2CB00426B00426080DB00426B00426080DB05B2B2D0002010000000700060000030007001FB6054A03044A0007BC01390001000401390000002FED2FED012FED2FED3130211121112521112101000600FA800500FB000600FA0080050000020079FFE104800601000B0017001F40100C9A0607129A001909891515190F89032FED12392FED003FED3FED3130052002111012212012



000B000F0015001B00220027008540181016251F191D1C23231610031C2F033F0302D0030103090DB80136401701301C701C801C038F1CCF1C021C1C0519251F03131300B80136400B01052F0E4F0E020E0E0308B8013840120F059F0502FF05017F058F05AF05FF050405002F5D7172ED33332F5D1239FDCE2F173211332F715D2FED332F5D5D1117332F11332F2F2F2F2F3001112111331521152111211103211121132627371617052627371617052736371706020503371613010C02759C035DFCA302CD97FB4F04B1CF4CAE949B68FD18404E975945FB438A905E9218AD01EC6599274801A302870271EE7BFEF8FD790214FE61FD8594FF38D7BE32C8BA22B9C84741ACD9284CFEE22101871975FEF00006005AFF8F0797063C000B000F00130017001B0027006FB71C211D1C24151019B80136B40C0C0B160AB80136B41A2113070FB80136B5300B010B2426B8013740111A0B031F101F201F501F801F041F1D0602B80138400B3F037F038F030360030103002F725DED3232335D2F123939ED322F5DED3332332FED3312392FED33322F332F2F2F300135213521152115211121111321112101211121012111210121112101113311211133112335211503AFFCAB073DFCB0019EFC2896010CFEF401A40105FEFB0105FEFB0105FE63FEF4010CFCF09705909B9BFA7004CAF67C7CF6FC4903B7FE790112FEEE0112FE79FEBA0146FEBAFE07054EFB81047FFAB25858000003004EFF87078F0627000E00140018006AB31111010FBE013900170016013800120001013C401517120820023002600270028002A002B002C0020802B8FFC0B6171A4802020B07B8013A40189F08010F081F08022F083F087F088F08BF08CF08FF080708002F5D7172ED32332F2B5D123939ED2FED2FED11392F30052127213235112135211523111406011523112111032111210602FEB017012D5AFA2C0741CD77FB88A10367A3FDDD022379904B053B8A8AFA9F4B6A01DE75037AFCFB0288FDF80000050010FF7D07E5069B00180038003C0040004400C640181701011111030D2A2A261E002F0B4F0B020B401215480B04BAFFF000040133B2030314BAFFF000140138B64F15011522361EB80136B660437043024342B80136400A603D703D025F3D013D40B80136B2390D08B80136B4300901091AB80134B51919153C0030B80137400E09393D43041F26401C2548260B3CB80136400D201F801FC01FD01F04D01F011F002F5D71ED332F2B121739ED321139322FED2F5DED332FED2F5D5DED2F5DED32322F5DED38332FED382F2B5D2F1112392F111239113311333005110607273600372135211133112117020715161707262711372736123723112111231114163332363637171514060623222626351123060013213521112135210121152101758A9447D001
6B40FDD001249B01013062D79998457A729833BFF215B00397F037644C3315067C396696637241C218FEE77F0266FD9A0266FD9A0266FD9A026683032D805B6489019BAF750120FEE037FF00F8098E587E566BFCDD0269430123B3046CFB94FE602B211C34C50FE83848180D4F4901C1DEFEA40551E6FDCEDCFEB3EC00070050FF8107AE06A1001E00220026002A0032004600710155B70607071F201E1B2AB8013640092F246F2402241A1723B8013640142F203F204F207F208F209F20062024202716131FB80136401C7F0D010D0D2C27206D306D406D036D6D4C6B6F400B10486F6949486BBA012F0070FFC0B40B10487048B80132400B2047704702474762675B4CB801344024204F014F363B4503404043383942433E3D3439434339333D400B10483D3D2B3333535A52B801344012555720533053405303534F535503622C4E62B80136B67F610161050003B8013640167027012F273F274F270327701001107F0A010A2E302BB8013640132F2C3F2C6F2C8F2CAF2CBF2CCF2C07D02C012C002F5D5DED33D6D65DC65D2F5D5DFD33DDD65DEDC4111217392F5D332FED3212392F11392F2B1239392F2F3211331133113312391117332F5DED333211392F5DEDDD2BED113939CD2B1112392F5D1112392F5DED33321139392F5DED33322F5DED33321112392F393025331521152311072712131706073336371706073315231133152311331523011133110311331103331123013521353315211501273637262737161736371706071617072627060327373637231123112137211133112111331121072111140623232733323511210607363727371307270606C2ECFDB5924B45B64B98283ECD383F942D5ADDE0C0C0C2C2FEA1D5D5D5D5D5D5FAED01CD9901ACFD252C4E766B39366D534D47503C562A5B414750879F104A1E2DD486016F1CFE9379029A73FE6F2401D04D32BA0B8445FE923123934A286053621560487743049679430148016B15A3A57ACA1D74B36FFED671FED171033BFED6012AFE65FED1012FFD0E015204006F8E8E6FFE43452751461D4539343B43363C411B404B35365CFC8E5E0863DFFD4203279C01EBFE780188FE159CFD6332456D380206C86B140F9B13FEC71551150000050013FF7F07E606C20048004E00520056006300FC401F4703033F0C252A2A2E23050A0A3F0C0C35350E336158580F155B5A5A57190FBE0133000E000801330007000101334010000E070000070E033E28272723335412BD013300520016FFF000160130B5151553132051B80133400B4B605201524B524B011C2EBCFFF0002E0132002FFFC0B70F28482F572F573FB8013840153E40191E483E5E5E1F190120193019401903191949B80133400B501C012F1C3F1C4F1C031C002F5D71ED332F5D71332F2F2BED33332F2F2BED38111239



00>] def
/CharStrings 27 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
/gid8 8 def
/gid9 9 def
/gid10 10 def
/gid11 11 def
/gid12 12 def
/gid13 13 def
/gid14 14 def
/gid15 15 def
/gid16 16 def
/gid17 17 def
/gid18 18 def
/gid19 19 def
/gid20 20 def
/gid21 21 def
/gid22 22 def
/gid23 23 def
/gid24 24 def
/gid25 25 def
/gid26 26 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-2016 -901 3732 2171} readonly def
/UniqueID 4234057 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB281E580E439FDF9E6E72033B329278B51D4092E79A4AF087BA4D61ABAEF23FD8FC177021A3B858A20B5D79122842F92ABC2944A3801326B6538F1A52F58F9162A12CE5285C5A27540238158DEB8626BCCF829E2F17CCC22755BE59043332308A4D47B0C1AEEA0A665BBBC80A55186D285E103F236B1B99B12A7617F4F79205120F2174F5B44451A5A966A7196E6B15C47C390A02231593DE60F77D92397B2D0E015571544D3F9CE4D095E33EA965B70C4CD34504885919EA4DB2591D6F3EE63E30967FA01DB53083B3BF74F5E022E24A1366BF28897B7B83C0A1BEAFDEDF75282AA4A57956EA23D20A3985863C8044F8A800AE247A3439655C7235A41650E95FEDED1C2B589E864BFFFEE3632E5697FBB8E2EC51F0143432E6826C1946E46CB0923E8D3BA2F0656A7F83B1138EA6A6FA3A6590B7BBC630F24E6CBFAD01E7674134FB66A3B234765A5F5BF889F28DBDD0CB155E8D48CB74EBBD09122A0EECED51E00A736A28EEB176F3D21BE0FA13A67C0E3A8D541B22A6C49184B1EDA50EA0C5B4078B1979708BE279A4E6FF0527F4C166ED109BD07FD7F18C6F6F4C636271B42C556A75FDF0EAA79C39B681B26510B12E80123B57BE4201C2394BC931D9B76A714108125FE9B1237D47B26060E284691F0D13FAEEDAF5E3968469A379181B34D7D393778428B10A6DF7EB4432458D567E9EDC0E43458867EF12B26C2343CB3A9458AC76FCD708CC6D08FC01D9F3137DAE7008F0C09879DFDE5E1A40F5E1CE522F4A90D49


758E769F0CC097DB6CD22D6A70D1FD92E67EA28C5F3ABC683BC968904FE50A6B14B4580D9B5F3750C1EBD205FD135931B60878A9C6D3BA808C06C1267A3BDDC562F6EB7B21070D91B09757CFA1557055BCAA4B52930FBD17330D09433A2B0AFE43EEB425FC0A67FA17A2DDEC59EBF1C0942C933E6A2E994649C52A9FB77922ABDB37E9EF2F2A7C41BDFA8E8A9AD86D5BCEC8B0D84E9BF2379B4D33E564F4FA3FD8BACB0C90FE6354D5E0216D961E9A236C76B06EF073E9691A410B8670CD3D2344A67189427AEBBE183AB805225782483BF290B686739B733ECEC869FFF1F68D1DB01FE43050269FE74C330E505CD49B6D65CDC59A958D8C2DE0C006EE509C55BA0DDD6C3C2C58B245BAD4BA0E5DE84BA7CF93903E5FEC89CECE5924801D319957ADB1914A1B57E208F1BE40E3CC57602EDC553EECF39E2A7296837A3F18BF73890996E636928686B93E419560289A659D9BD10EBAF5146DBA8FF29D93A334C0A2AD6C996C114EB329FE8F3C363D53F378434DD94BEB6648A05287A8DDF3856665A2419756920E4EC6EA047E5A42899848832C3726873CD9611C768A6CCE87790DD712FA32F4B7F9ACD589A3646460CA5123761C014CFB202916B8D7559C83478EDC691C1678E18E5C7225D7B9634332EABC85C3410B755833D84A31C1E9CA4D8A4178DB57A0C4FABC5FCF4E8C79099F354F2EF35BC3365BC584F09263CF7EB642831739BDE0FB1A92A72E6B8B4C63FE0BFE850B15EA9270B657477FD72547538CBF2282685289044083B51547B6DA754BC066AB17407A3452D8D966CFA928FC2284F438D77BED05D30D197800B86C68715EAB2A5DC89884169F4106591E35EAADB49CDD4BEDA73372D281A82D80917AF0EF4DE6407263FE8C2728EC634F9356D0A676E8EFC99232AFBD54449BCA7C4386F40FC0C59D9A1FDC29A54E4ECB4360044FCAD680CE249C247FAA85408ACFC8C40CAA106FAB07F774839E338EA9005B5FC1F5A30735AD6E50B9BC9B6A0A8117DF62DC2AFC441D27AB9A9EE8DF475DDD743D887D3E4D83D1FDDE6FBB3C092D3C75661E0EDFDDD87B56D5ECD8E70C3002184B2573B6832A7E92DCEB249B7B5C635B4A0FC3E84D93A60164960AD8B5C93802BD80EB26A7C7E4AA5F3385D669334009D0B2A7617F7CC292C340651571F227B5C91A664AE2F7AEE9D80171866F7EC2F1D5C6AA819506CA9A97622CA6263441C829498881A3B88C3478560F5F2E5BAE56876FC7128273F222344880218C0198ABC6516850AFBC6D6BC52685FAD01AA0EE5129A2E1A7FCF08F899D902FA5652DABFC11DD8436114B78DD1084397CFB4B0DF0EC4A7BB09EA17B2AED61A12C0A9B2D5E1B50DA42AF5A99961711D1984A8A41B75735F657CAD0A91CC08063E7A7D6A62AAD4F21B8AB3D10519B1AA79B8F0C9DF9696288A53B8C0BE592B693C4AB75
8C67F8E0D6036972FCADE4BD57AC1004EAFAA7DCE15DB8EAEAFA0F52787989093716E969F4444EC02294ED56CD027AF19C8E125B9BA40D2E40C4857B41B640B9D4BC62CC6A09F395FC0A1A3703A129E9506618BB64014A53C814EE3B447BCAE45082608BE89F2E5E36751A7C5375B5B697F72AC535D09B3221763F8A54491A484D1FBB6EE14AE755DE6C140EF3D0C8FD0CAF42B2E4F4884A49833618A0A50E78C6AD94DC49D9924CE719CE5FF1F18E04D0D5D44541053141AA8A3084D8D130C7969C5AB0C7147676F26582CCB5154C69A6CC5CA3890F83DAB205516321A72D7533FB350E2E03CDAE73123127C78678F20650596AAA455E825E9DEB1EB135C6A52AB6882DABBC9DAEA9B6921E926FCB2429A5D4D327A000BA8DBB7C59C07570FE19033336D7BF2E52B52653E74B588DF76E6CF3BE600D237820DFF890028D458D67413C8F50DE28826AC41452C2063C9AE502E2610B8A7DCF12ECE05DF885CA8AA1C0AD09378D1A84FBCF2186A23422EAD94E30183A7F1184A43ADF5C8C2DF7887C3C760BF6C7CEC13435BB2F95DADF669E64720FC2851E88C345A642FABE6D3A76CCB56A5378AC7BA96A8D8302B4C9E024A5162E8C92B741443ADA05C6AAF69317E016DCBE1A100627AF6D18E1996DA61B8A9F892CE1E12BDBADC01F49753F8FBC924DEF8BEA0E8C4F48C629827C54C28D96143D94E50CF02B57E1BA4C298ADE6C67EEC91BEEB90050C6CE72B4E4D2C604E68F55F01C24D5F8E3D8B44CF4A2E9961A998EABDB32B0288CACE51F4623039A035917FE01A9B204E6F2925AF4F4BA2A95767510B1A6365744A58E1377BD194AB4ED24B30EE923E34E12B44980F383AF7987CDC164156C7B54BE5A2B825B676D4C4EF7DE137A999C8761CC4CEDE34AD4E917E1A45F394603A1690250B4D715AA0719D27C1E7DBE8A2A9750588E7079116ED8E3FC106942412B0A948362BCF9D715B797D2204752F2DD7987345D62F45307BA36EC24D3DDFDADEA6547BE7E48C1CB565D07AD3F21C67952063D4273685D63A7DDB094EA237F5264A19B03C438BD20833BDED7979C12B934EA9E92B6A48FB8AF99B81ED819F9F4E606EA8EA16DF5D6537851E700459A8401BC4FEE717C4EBA5F78A208DC5257ECEF32EC8894A27F02796BFE8D20049879805717B3768AA6FB48EE93CEF660F6B6EFB50310A043B40F5B4C3C6D50D964AE16064B8839D7D7F9035729FB915F13899D958C29DA01F172998A989C16F9534BE4C17CE1EFFBC497F6C93191525976025DF1F06B233CEEB4ED708BDEB52358EE65786A34B0FB8FCAB8C6407C2C5103E74CF1CE9441E49165D859DAA5C8A8F80A8BF36F9EDDB86540354E27DBE5A9E070BE30306615EBEAD55AC89F9A159274EC6524B127C73E31EE2CB3AF9E5EA0C2662F15816C798E921C6FE65698585D1243C51489072CB6
A2D7AE3408DC9785D99E377716B4C58F18B62012B7AA33E16ABF9466C38B49BB5C3C26FCF31ED302419A87AF84F69FA6A65009412FD4ABA1158EBE395232A7B62FE1CC5BE093BD5196964F8CC0F154B4231B4931B056495404D0306594674DE426040255A77BACC531C9309546B174CED72CFE912761C2772501C2FDFB89C43020B066807C98E41A62E1B5325200162F5501BAFAF3711CFF9A6612A45992B6978DCD21E2115A3E8E384DF75D90F3B93E3C8426459023FC3CE4AC27117E241599ECCF48B371DD3AF1967D7D1F59F9672803D73A293DA5D386CCC7FC513C846C56AD59C1BA063F600C89AA8A0C463C4FC0F826B2BF4D915C69EA04CAE5FBD0BB4367E09E01085CAC816CB1445498EC5B3ED3C9B6CF9B89EA743853C49C0CCC2EDAED7DCB671F1D7EC967A366D2E6A7DED1A7292AF2F737E6954A2A70E1D0DB7EEDD10A57F0EF5E5441803CF4881F609904D92CA28A5409ECDA291FCD62EDA6C6CE86E9DAF5E234F71F9066476716A324C664EC8E37389C7A7AA2A51879403DB0138690D4CA4151F90B928333871A57FF1C81FF1CBBB1931DFCD7A7DC7D341A9D74ECD1B2B413ECBB34D569A7FD824D9EDCA1F5924ABBEDDDC6DCCBEF31C46EBEE5751D6047FC1B8C8D455565F2AE950E67A81F2CED90BDF3DA8DF63DE54CA1D270A79C074B93214A387AEFA29C692CBCCD4C4E47F38C243044623684A68415403ACFCA9A261513C9C90EB2D0645EFA1DEF44C99035C4C237C15451B8AE9AC5C16B555C8086123F765A92F90155103CA16BB8AB5C6573B78B639E40A3349A041D9F41F57E6DD07648E4BF04BE9F5C56F35F624EE6D4197C5A2052F68B80E5BDFF5E8AA9345DA647685802B8F5FC38E5348C028A25565788D622B7288E6D6C194597091B15786B5E0299DD4256F71AB0E337AF0B921CA71C393897C4010B414E71AF39E5576D4B5987A6F8D5141EC30C42DBAB83AF65E2779537EF88CEC82C42FA9EAD86836B929AC18547021EDB857063A324E02ADBB58CDD62E7AC1D4ECAD56A4C8B069B9F8DCA452EF7E628B219C1C67F11898336054591D222B7405F16D762B9E648EE7B94757F3EB3AD1AE72DE4AF2DEE386333D3098BE44DCE6FF70E71A9B5F7508FF9BB6BB711E1DFF40ECC4BE4D14EE2F30B4DD4F19E1DE99F54478E01D7A9DE6F008F7B36B6FFFA4A747ABB20EB8FF8D576E9C63467FBBB8DA09BFD76BF2D95D5E3F21D68F3DFC491D7F36CBCC64A18CDFC600B3B65CF1D35145918F0955B1635AACF28399E7AF580FC26E630E02997604FBBE2DD6157E2368853AD06CE59BCEADFB4CE31639245041F9BD34FA3C4CA2405B5AFDB4140C5524810609D6F9B59
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/CVXBME+Meiryo cguidfix
/F1.1/CVXBME+Meiryo renmfont
%RBIBeginFontSubset: PHZAUS+Meiryo
%!FontType1-1.0: PHZAUS+Meiryo 1.0000.6.3000
14 dict begin
/FontName /PHZAUS+Meiryo def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /gid6 put
dup 34 /gid7 put
dup 35 /gid4 put
dup 36 /gid5 put
dup 37 /gid1 put
dup 38 /gid3 put
dup 39 /gid2 put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2016 1 index div -901 2 index div 3732 3 index div 2171 5 -1 roll div]cvx def
/sfnts [<
74727565000900000000000063767420000000000000009C0000030A6670676D00000000000003A800000BD8676C79660000000000000F80000008FC68656164000000000000187C000000366868656100000000000018B400000024686D747800000000000018D8000000206C6F636100000000000018F8000000126D617870000000000000190C0000002070726570000000000000192C0000046C0626000B000005E3001F009A05E3001F000004E3001F0000000000000000046A001F00960000FFE100000000FFE100000000FFE10000FE5FFFF5000000000000FE730000000000000000000005EE00140234FFEC03BA00140000FFEC00000000000000000000000000000000000000000000000000000000FEB0087B0000000000000800000008000000040000000070009F0095007F0000008C007A00660000000000000077008B00000000000000000000000000000000000000000000000000000071000000B7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000C200BA00AD00000000000000B600B000A6009E0000000000BF00B400AA006A000000000000000000A5009F0090000000A6009D0096008F00A10097008A007A0080008500000000000000000000009A000000000000000000000000000000000000000000E3011101A0028300D300CC00000000000000000000000000000000009A0094000000C700B7008C008A008500650074006E00A000AF0000000000A4009D00000000000000000000000000000000010900000000000000810077007A0000000000000000009900000086007A00000084008000760000018E02350075007B00C200000099009000860078042002F600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000410046004B00500055005A005F00640069006E00730078007D00820087008C00910096009B00A000A50000000000000000008C00910096009B00A000A50085009300A000AE00B80073004E0000000005EC00160000059A00180000059A001800000000000000000000000000000400001800000000FFE800000000FFE8FF890000FFE80000FE29FFF5000000970000FEBA0000008A00D600E100970094008A00770080005800C300860071FCAEFFEB000D000040565F5E5D5C5B5A5954524D4C4B4A4948474644434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100




036A029AF9D94E5905B4ABFEEFA8FBF030033DFCF301CCD3D3FEA7EE0008002AFF8607EF06A3001E00220026002A002E00320036004D00FC40153E1D121200100E0303010F4C10491043494C03403BB80136B53C3C382F3E27B80133B42D352D342CB80133B328302810B80135B20F0F01B80138B50000170D0A05B80136B4060618081FB80133402825302D402D502D802D902DA02D0600280130284028022F280180259025022D282525282D03382018B80138B71740141B48174B46BAFFF000460137B547474B170338BA01340037FFC0B60B0E4837080824B80133B67F2001D0200120002F5D71ED332F2F2BED173310ED382F2F2BED111217392F2F2F5D5D5D715D10ED1112392FED333211392FED322FED113310ED32113310ED323211392FED3317323838111239113311123911332F30132736371123353311331133152311371706071114062323273332363511060111211103211521011121110323153305112111032315330127243721352135331521152116041707242711231104502661AFE8E894AFAF9F103D72654FB8159F222C7E02B4036393FDC2023EFC8801F680F4F4013801FD81F9F9FB7D3B0186ECFDFD02259D0236FDF26401738B4CFEB8F897FEEB021C7F193901CB790172FE8E79FE68396E1E2DFD824652852A1B02152D02A4017EFE82011CB8FD9E017AFE86011EBE60017AFE86011EBEFC7A66A6F6799090796AEC317B8BF5FE4A01A8ED000006001CFF7D07D806A30023004B0051005E0064006A010140570B1010110A11080804135F1B135F005543242445491B164C134D0D5265681E4940590159404F014F2D3265524645452862565655550D495C5C53530D4D404C014C4C004F2D320D0F0001EF00FF00020040181B48000D3CB80137B2396803B80137B604041E22201801B80135B5165938352F28B80136B3293D2640B80138400A291639030A3F0D091009B8013140090F0A013F0A9F0A020A002F5D71ED38322F121739ED33332FED333332392FED33323232392FED322FED2F2F2B71721133333312392F5D3311391133113311392F33113311392F3333322F2F2F5D2F5D2F2F2F2F2F11123911123911123911331112392F2F2F1112391133111239113330051106072736373637013717363717060717363717020736372627371617072627060711011617112135332627371617333637170607331521112115211116370720242706072736120333120127363717020311060727361237170607331101260337161705271237170201487BA10E4E40434CFEEF582D7737825B87806B318AB3B593661C09713D1875070A3647035D5268FECDA7393C8630488A5723962F5CC2FEC80105FEFB92C71BFEE7FECA5D2A53593656098807FDE45EB94C847C5B392B5E57AB2F832D662BFE580D25751523FDAF

3B007B008B00BB00CB00FB00061B011D0D18071A0D1510170D1204140D003C01351B012C3C2A3C283C263C243C223C203C1E3C1B3C183C153C123C0F3C093C063C033C003C50335401B0124B004B5442B013014B004B5342B0332B4BB8032052B0322B4BB009505B58B101018E59B0332BB00288B8010054B00488B8020054B012435A5B58B80119B101018E851BB900010100B04B60858D592B2B1DB0644B5358B0801D59B0324B5358B0901D59004BB03251B01B23422B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B73732B2B2B2B737473747373732B2B2B2B2B2B2B2B2B2B2B2B2BB1282645B02A4561B02C4560442B2B2B2B2B2B2B2B2B2B2B2B012B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B002B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B74752B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2BB018B03F4B53422B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2BB109322B4BB05052424BB008524BB008505BB01A23424BB0C8524BB036505BB00C2342002B742B2B2B2B732B2B2B2B7373732B2B2B2B2B2BB8015745B801824560B8018223442B
00>] def
/CharStrings 8 dict dup begin
/.notdef 0 def
/gid1 1 def
/gid2 2 def
/gid3 3 def
/gid4 4 def
/gid5 5 def
/gid6 6 def
/gid7 7 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] readonly def
/FontBBox {-2016 -901 3732 2171} readonly def
/UniqueID 4234057 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28BC20B024FCBC509909A631A9D6649FD48DF0658ED29ED1C9B13A396973EB0545CDF25053623D6C928CF7F9A31D71E1056223413FA7AC82B1D31FB7D532D70559EAC4544ED8CFA7D568F24668211407909FFE58EB9845D5B89E89E36965AECB599C96AB24902F5B6BC3EDB5CE19A9F49C1B0B63DC80B82BD0378C68E3489F8DD80F76F98998B327E47E8AA671AC6FC43AAF1E182F59E05B88BD9EED21555CB05DC5939E2BD6B5C9FB9221041BCE4EAD02FB335510055790C7C9387449F4359892EE1464CC64D4FC18D59E6496584F9B1645E8C7D464A04F4A99A668B6E8D644B8DE89F2E5E36751A7C3F77494506CFA07C46AEEAE18EB0BD31B87251328AD57F202D631EBF253FD07F7BD7077D124A5B28605CCA8EBE691A0A67B081CC0FDCCBF8E8082118D9B1CC3BFCEFD6062C1E514C44F93AD472E9BF49D469F3F1C99724992B8EEFA0495F0FF825BDC89F15DC5AAE85CD822851B32D646CFEB230880B91EB26B2C85889A9EB9B440AC71C3525C29C0540E3DC557E97B1EF1BB1A9F5A3E81702C453D813EDCFF3A31A06F4702A8F76A7D8531FD1C257873A81C4C097A62225A9BE2720C6675E23C3D46B390A8406C608C073320C9F97C5765887766011BC87609571D7F26898B4CC959A3B05323786913D73179F61128CA00DDABA8A92B286CF94599EEE56977DB5B58947526B3B70BC53B91671459D239182C6441F86193B4F1423CDF2459121BA79DE44D4624C7AB922183B3D438F2B129AA582288E5767D6E077

2702CF42AE20F1056B3492A4E17DE51161BB0C713E4A5E17690BEE538457C94825E0935BBDF88BF05AE480ECF097A876BC9B1E177202EC596A756B46E70255F75B4EF661BD0A1606C4181F2277A4A4CE097A22B5988EE479004A16AE49A03FA6707815BFE26FA3D5FF139E611276B3E333F6D13B75FC915A5660A5F099DB7E51541BAD8AEB2B51195FBC6A28A71705E544B42BC2D0ACB83347FDB2E1A9B32B09CF529C5A2A9D4CF074CA6EB946A552DAC931FB4BD6A94F3500C2678EDDB78FF3E68AF6A530A7B90D919F31EDADC797F85844D9B69EBD42E22850FCEE45E98D13214DEE6B7473FA6CE00CD045717C9F2A5B91D996E71D02C3BA83422F357BC5CE7C03E3B9ACBA7E9388E10ED4187A63AA890AC46004C351658F500469FDC435076EFA82EFF87F5A2D0BABD13F17CA46C4CF69460E5107A6D3F668B023E637E0238CAC01269972945CA865DC428E7F18F46C7970C33F69ED438A2D9EC77EB79EF814D4E689B38AF234C472
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/PHZAUS+Meiryo cguidfix
/F2.1/PHZAUS+Meiryo renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 1 1 sc
q
14 68.999992 813.84003 458 rc
14 527 m
827.84003 527 l
827.84003 68.999992 l
14 68.999992 l
h
f
Q
q
14 68.999992 814 458 rc
14 527 m
828 527 l
828 69.000008 l
14 69.000008 l
h
f
204.68111 418.20999 m
637.31879 418.20999 l
637.31879 177.7901 l
204.68111 177.7901 l
h
f
Q
0.49803919 0.49803919 0.49803919 sc
q
266 228.2 361.92001 180 rc
297.17181 384.76471 m
325.53189 384.76471 l
325.53189 228.35941 l
297.17181 228.35941 l
h
f
0.99607837 0.34509799 0.0039215689 sc
387.64041 355.94351 m
416.0004 355.94351 l
416.0004 228.35941 l
387.64041 228.35941 l
h
f
478.10901 338.14609 m
506.46899 338.14609 l
506.46899 228.35941 l
478.10901 228.35941 l
h
f
568.57751 361.17639 m
596.9375 361.17639 l
596.9375 228.35941 l
568.57751 228.35941 l
h
f
Q
12700 w
1 j
0.26666671 0.3294118 0.41568631 sc
q
266 229.16 361.92001 179.03999 rc
0.00006677 0 0 -0.00006678 309.44409 393.88629 cm
29077 135023 m
29077 259180 l
29077 135023 m
29077 0 l
0 259180 m
57150 259180 l
0 0 m
57150 0 l
S
0.00006677 0 0 -0.00006678 399.9126 378.96371 cm
29364 342975 m
29364 545872 l
29364 342975 m
29364 0 l
0 545872 m
57150 545872 l
0 0 m
57150 0 l
S
0.00006677 0 0 -0.00006678 490.3812 352.18811 cm
29652 211667 m
29652 399087 l
29652 211667 m
29652 0 l
0 399087 m
57150 399087 l
0 0 m
57150 0 l
S
0.00006677 0 0 -0.00006678 580.84967 376.2189 cm
29939 226380 m
29939 432470 l
29939 226380 m
29939 0 l
0 432470 m
57150 432470 l
0 0 m
57150 0 l
S
Q
6350 w
0.81568629 0.80784309 0.80784309 sc
q
203.84 178.03999 432.95999 240.96001 rc
0.00006677 0 0 0.00006678 266.11761 228.35941 cm
0 0 m
1 2684066 l
S
0.00006677 0 0 -0.00006678 266.11761 407.61029 cm
0 2684066 m
44873 2684066 l
0 2350127 m
44873 2350127 l
0 2012197 m
44873 2012197 l
0 1677862 m
44873 1677862 l
0 1343527 m
44873 1343527 l
0 1005597 m
44873 1005597 l
0 671262 m
44873 671262 l
0 336927 m
44873 336927 l
0 0 m
44873 0 l
S
9525 w
0.00006677 0 0 -0.00006678 266.11761 228.35941 cm
0 0 m
5420111 1 l
S
0 0 m
0 346858 l
1353876 0 m
1353876 346858 l
5420111 0 m
5420111 346858 l
S
0.00006677 0 0 -0.00006678 266.11761 205.1951 cm
0 0 m
0 346858 l
1353876 0 m
1353876 346858 l
5420111 0 m
5420111 346858 l
S
0.26666671 0.3294118 0.41568631 sc
0.23999999 0 0 0.2400655 251.49879 -340.7547 cm
/F1.1[ 33.333328 0 0 33.333328 0 0]sf
0 2362 m
(!)s
0.23999999 0 0 0.2400655 246.23331 -318.1947 cm
0 2362 m
("!)[ 20.833331 0.000000 ] xS
0.23999999 0 0 0.2400655 246.23331 -295.87469 cm
0 2362 m
(#!)[ 20.833331 0.000000 ] xS
0.23999999 0 0 0.2400655 246.23331 -273.55469 cm
0 2362 m
($!)[ 20.833331 0.000000 ] xS
0.23999999 0 0 0.2400655 246.23331 -250.99471 cm
0 2362 m
(%!)[ 20.833331 0.000000 ] xS
0.23999999 0 0 0.2400655 240.9677 -228.6747 cm
0 2362 m
(&!!)[ 20.833331 24.999998 0.000000 ] xS
0.23999999 0 0 0.2400655 240.9677 -206.35471 cm
0 2362 m
(&"!)[ 20.833331 24.999998 0.000000 ] xS
0.23999999 0 0 0.2400655 240.9677 -183.79469 cm
0 2362 m
(&#!)[ 20.833331 24.999998 0.000000 ] xS
0.23999999 0 0 0.2400655 240.9677 -161.47479 cm
0 2362 m
(&$!)[ 20.833331 24.999998 0.000000 ] xS
0.23999999 0 0 0.2400655 290.1539 -355.87469 cm
0 2362 m
('\(\)*+)[ 35.329996 35.329996 35.329996 35.329996 0.000000 ] xS
0.23999999 0 0 0.2400655 389.10172 -355.87469 cm
0 2362 m
(,*-)[ 35.329996 35.329996 0.000000 ] xS
0.23999999 0 0 0.2400655 475.3306 -355.87469 cm
0 2362 m
(./01)[ 35.329996 35.329996 35.329996 0.000000 ] xS
0.23999999 0 0 0.2400655 565.79919 -355.87469 cm
0 2362 m
(2343)[ 35.329996 35.329996 35.329996 0.000000 ] xS
0.23999999 0 0 0.2400655 297.1048 -378.9147 cm
0 2362 m
(56)[ 23.936664 0.000000 ] xS
0.23999999 0 0 0.2400655 308.64069 -378.9147 cm
0 2362 m
(78)[ 35.329996 0.000000 ] xS
0.23999999 0 0 0.2400655 478.04401 -378.9147 cm
0 2362 m
(56)[ 23.936664 0.000000 ] xS
0.23999999 0 0 0.2400655 489.57559 -378.9147 cm
0 2362 m
(9:)[ 35.329996 0.000000 ] xS
0 0.2401311 -0.2399345 0 797.0177 283.88 cm
/F2.1[ 50 0 0 50 0 0]sf
0 2362 m
(!"#$)[ 49.460000 49.460000 49.460000 0.000000 ] xS
0 0.2401311 -0.2399345 0 797.0177 335.48001 cm
0 2362 m
(%&')[ 21.730000 24.630000 0.000000 ] xS
ep
end
%%Trailer
%%Pages: 1
%%BoundingBox: 0 0 595 842
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
